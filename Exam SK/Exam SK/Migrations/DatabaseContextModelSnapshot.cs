// <auto-generated />
using System;
using Exam_SK.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace ExamSK.Migrations
{
    [DbContext(typeof(DatabaseContext))]
    partial class DatabaseContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.11-servicing-32099")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Exam_SK.Models.Car", b =>
                {
                    b.Property<string>("LicencePlate")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("DateRegistered")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("FuelType");

                    b.Property<string>("Manufacturer")
                        .IsRequired();

                    b.Property<string>("Model");

                    b.Property<DateTime>("YearOfProduction");

                    b.HasKey("LicencePlate");

                    b.ToTable("Cars");
                });

            modelBuilder.Entity("Exam_SK.Models.Rented", b =>
                {
                    b.Property<int>("CarID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CarsLicencePlate");

                    b.Property<DateTime>("DateOfRent")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime?>("DateOfReturn");

                    b.Property<int>("KilometersOnRent");

                    b.Property<int?>("KilometresOnReturn");

                    b.Property<string>("UsersUName");

                    b.HasKey("CarID");

                    b.HasIndex("CarsLicencePlate");

                    b.HasIndex("UsersUName");

                    b.ToTable("Rented");
                });

            modelBuilder.Entity("Exam_SK.Models.User", b =>
                {
                    b.Property<string>("UName")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("Birthdate")
                        .HasColumnType("date");

                    b.Property<DateTime>("CreatedDate")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Email");

                    b.Property<bool>("HasDriverLicence");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(20);

                    b.Property<string>("Password")
                        .IsRequired();

                    b.Property<string>("Surname")
                        .IsRequired();

                    b.Property<DateTime>("UpdatedDate")
                        .ValueGeneratedOnAddOrUpdate();

                    b.HasKey("UName");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("Exam_SK.Models.Rented", b =>
                {
                    b.HasOne("Exam_SK.Models.Car", "Cars")
                        .WithMany()
                        .HasForeignKey("CarsLicencePlate");

                    b.HasOne("Exam_SK.Models.User", "Users")
                        .WithMany()
                        .HasForeignKey("UsersUName");
                });
#pragma warning restore 612, 618
        }
    }
}
